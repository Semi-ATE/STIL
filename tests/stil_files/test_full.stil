STIL 1.0 { 
    Design 2005; 
   }

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!   
//
// This test STIL file should be used only for testing syntax parser.
// It is no suitable for testing semantic parser.
// 
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!   
   
// Test single comment line ! @ # $%^&*()\-+=|\`~\{\[\}\]:;\',<.>\/?\\

/*
  Test multiline comment
  ! @ # $%^&*()\-+=|\`~\{\[\}\]:;\',<.>\/?\\
*/

Header {
   Title "STIL output";
   Date "Thu Feb 25 21:18:51 2021";
   Source "Minimal STIL for design 'IC'";
   Ann {* test " Annotation " !@#$%^&()\-+=|\`~\{\[\}\]:;\',<.>\/?\\ *}
   History {
      Ann {* separate data "Tue July 21 10:11:57 2020"  *}
      Ann {* date "Tue July 21 10:11:57 2021"  *}
    }
}

   Ann {* test " Annotation " !@#$%^&()\-+=|\`~\{\[\}\]:;\',<.>\/?\\ *}

Signals {

    CLOCK        Out   ;

    Ann {* data "test" *}

    Signal_in__1 In    ;
    Signal_out_1 Out   ;
    Signal_io__2 InOut ;
    Signal_sup_3 Supply;
    Signal_ps__4 Pseudo;
    Bus[0..128]  InOut ;
    "sig !@#$%^&"[0..128] InOut ;

    _block_signal_1 In { Termination TerminateHigh;
                        DefaultState U;
                        Base Dec LHT;
                        Alignment LSB;
                        ScanIn 4096;
                        ScanOut 8192;
                        DataBitCount 123;}

    _block_signal_2 Out { Termination TerminateHigh;
                        DefaultState U;
                        Base Hex 01Z;
                        Alignment MSB;
                        ScanIn ;
                        ScanOut ;
                        DataBitCount 123;}
}


SignalGroups {
    Ann {* data "test" *}
    ALL = 'CLOCK + Signal_in__1 + Signal_out_1 + Signal_io__2 + Signal_sup_3 + Signal_ps__4 + _block_signal_1 + _block_signal_2';
    ALL_BUT_CLOCK = 'ALL - CLOCK';
}

SignalGroups SG1{
    ALL = 'CLOCK + Signal_in__1 + Signal_out_1 + Signal_io__2 + Signal_sup_3 + Signal_ps__4 + _block_signal_1 + _block_signal_2';
    ALL_BUT_CLOCK = 'ALL - CLOCK';
    ALL_OUT = 'CLOCK + Signal_out_1 + _block_signal_2';
}

UserKeywords scan_id;
ScanStructures {
     ScanChain chain_master {
         Ann {* data "test" *}
         ScanLength 512;
         ScanIn Signal_in__1;
         scan_id user_defined_id;
         ScanOut Signal_out_1;
         ScanMasterClock CLOCK;
         ScanInversion 1;
         ScanCells ! sc0 sc1 sc2 ! sc2a;
     }
     ScanChain chain_slave {
         ScanLength 512;
         ScanIn Signal_in__1;
         ScanOut Signal_out_1;
         ScanMasterClock CLOCK;
         ScanInversion 0;
         ScanCells { sc00 ; sc01 ! sc00a ;}
     }
 }
ScanStructures Named{
     ScanChain chain_master_alt {
         ScanLength 1024;
         ScanIn Signal_in__1;
         scan_id user_defined_id;
         ScanOut Signal_out_1;
         ScanMasterClock CLOCK;
         ScanInversion 1;
         ScanCells ! sc0 sc1 sc2 ! sc2a; { sc00 ; sc01 ;};
     }
 }

Spec fast {
    Category fast {
        wft1_t1 = '100.01ns';
        wft1_t2 = '200.02ns';
        wft1_t3 = '300.03ns';
        wft1_t4 = '400.04ns';
        wft1_t5 = '500.05ns';
        wft1_t6 = '600.06ns';
        wft2_t0= '0.00ns';
    }
    Category min_max {
        wft1_t1 {Min '90.00ns'; Typ '100.00ns';  Max '110.00ns';}
        wft1_t2 {Min '190.00ns'; Typ '200.00ns'; Max '210.00ns';}
        wft1_t3 {Min '290.00ns'; Typ '300.00ns'; Max '310.00ns';}
        wft1_t4 {Min '390.00ns'; Typ '400.00ns'; Max '410.00ns';}
        wft1_t5 {Min '490.00ns'; Typ '500.00ns'; Max '510.00ns';}
        wft1_t6 {Min '590.00ns'; Typ '600.00ns'; Max '610.00ns';}
        wft2_t0 {Min '-10.00ns'; Typ '0.00ns'; Max '+10.00ns';}
    }
}

Spec slow {
    Category slow {
        wft1_t1 = '100.01us';
        wft1_t2 = '200.02us';
        wft1_t3 = '300.03us';
        wft1_t4 = '400.04us';
        wft1_t5 = '500.05us';
        wft1_t6 = '600.06us';
        wft2_t0= '0.00us';
    }
    Category min_max {
        wft1_t1 {Min '90.00us'; Typ '100.00us';  Max '110.00us';}
        wft1_t2 {Min '190.00us'; Typ '200.00us'; Max '210.00us';}
        wft1_t3 {Min '290.00us'; Typ '300.00us'; Max '310.00us';}
        wft1_t4 {Min '390.00us'; Typ '400.00us'; Max '410.00us';}
        wft1_t5 {Min '490.00us'; Typ '500.00us'; Max '510.00us';}
        wft1_t6 {Min '590.00us'; Typ '600.00us'; Max '610.00us';}
        wft2_t0 {Min '-10.00us'; Typ '0.00us'; Max '+10.00us';}
    }
}

Spec test_time_units {
    Category units { 
        wft1_t1 = '100.01as';
        wft1_t2 = '200.02fs';
        wft1_t3 = '300.03ps';
        wft1_t4 = '400.04ns';
        wft1_t5 = '500.05us';
        wft1_t6 = '600.06ms';
        wft1_t7 = '600.06s';
        wft1_t8 = '600.06ks';
        wft1_t9 = '600.06Ms';
        wft1_t10 = '600.06Gs';
        wft1_t11 = '600.06Ts';
        wft1_t12 = '600.06Ps';
        wft1_t13 = '600.06Es';
    }
}

Timing {

    WaveformTable "fast"{
        Period '100ns';
             Waveforms {
                 CLOCK { 01 { '0ns' D; '250ns' U; }}
                 Signal_out__1 { 01 { '0ns' D/U; }}
                 Signal_in__1 { LH { '0ns' L/H; }}
                 Signal_io__2 { 01 { '0ns' ForceDown/ForceUp; }}
                 Signal_io__2 { LH { '0ns' CompareLow/CompareHigh; }}
                 Bus[0..128]  { 01Z { '0ns' D; '0ns' U; '0ns' Z;}}
                 "sig !@#$%^&"[0] { 01Z { '0ns' D; '0ns' U; '0ns' Z;}}
             }
    }

    WaveformTable "slow"{
        Period '500.123ns';
             Waveforms {
                 CLOCK { 01 { '0ns' D/U; }}
             }
    }

}

Timing TLABEL {
    
    WaveformTable "wft1"{
        Period '500ns';
             Waveforms {
                 CLOCK { 01 { '0ns' D; '250ns' U; }}
                 DATA1 { 01 { '0ns' D/U; }}
                 DATA1 { LH { '0ns' L/H; }}
                 DATA2 { 01 { '0ns' ForceDown/ForceUp; }}
                 DATA2 { LH { '0ns' CompareLow/CompareHigh; }}
                 SYNC  { 01Z { '0ns' D; '0ns' U; '0ns' Z;}}
             }
    }

    WaveformTable "wft2"{
        Period '500.123ns';
             Waveforms {
                 CLOCK { 01 { '0ns' D/U; }}
             }
    }

}

Selector typ {
        wft1_t1 Typ;
        wft1_t2 Typ;
        wft1_t3 Typ;
        wft1_t4 Typ;
        wft1_t5 Typ;
        wft1_t6 Typ;
        wft2_t0 Typ;
}

Selector all {
        wft1_t1 Min;
        wft1_t2 Typ;
        wft1_t3 Max;
        wft1_t4 Meas;
        wft1_t5 Typ;
        wft1_t6 Typ;
        wft2_t0 Typ;
}

PatternBurst patt_BURST_12345{
    SignalGroups SG1;
    MacroDefs macro_domain;
    Procedures proc_domain;
    ScanStructures scans1;
    Stop  stop;
    Start start;
    PatList { PATT_START; 
              "Unique patt" 
              {
                SignalGroups all;
                MacroDefs macro_domain1;
                Procedures proc_domain2;
                ScanStructures scans3;
                Stop  stop21;
                Start start12;                  
              }
                
             }
}

PatternExec {
    Timing TLABEL;
    PatternBurst patt_burst;
}

PatternExec patt_EXEC_12345{
    Timing TLABEL;
    PatternBurst patt_burst;
}

Procedures proc_domain1{

    proc21{
             lab:   W wft1;
                V {ALL = 00LX; S1 = 00LX;}
              l2 :  Vector {ALL = 00LX;}
                C {ALL = 00LX;}
                F {ALL = 00LX;}
    }
}

Procedures proc_domain2{

    proc1{
             lab:   W wft1;
                V {ALL = 00LX; S1 = 00LX;}
              l2 :  Vector {ALL = 00LX;}
            
                Ann {* data "test" *}
            
                C {ALL = 00LX;}
                F {ALL = 00LX;}
    }

    proc2{
                W wft1;
                Shift {V {ALL = 00LX;}}
                Call proc1;
                Call proc2{ "DATA1" = 010011 \r10 C 001LLHLLL;}
                Call proc3{ "DATA1" = 010011001LLHLLL;}
                Call proc4{ "DATA1" = 01001100
                            1LLHLLL;}
                Macro m1;
                Macro m2 { DATA1 = 010 011 \r10 C 001LLHLLL;}
                
                Loop 10 {
                            l1: W wft1;
                            V {ALL = 00LX; S1 = 00LX;}
                    Loop 10 {
                                l1: W wft1;
                                V {ALL = 00LX; S1 = 00LX;}
                        }
                    }
                    
                Loop  1231212 {
                            l1: W wft1;
                            V {ALL = 00LX; S1 = 00LX;}
                    }

                MatchLoop Infinite {
                            l1: W wft1;
                            V {ALL = 00LX; S1 = 00LX;}
                    }
                    
                MatchLoop  1231212 {
                            l1: W wft1;
                            V {ALL = 00LX; S1 = 00LX;}
                    }
                    
                Goto hell;
                
                BreakPoint;
                BreakPoint {
                            l1: W wft1;
                            V {ALL = 00LX; S1 = 00LX;}
                }
                IddqTestPoint;
                Stop;
                ScanChain sc_1;
    }
}

//                Ann {* data "test" *}

MacroDefs macro_domain{

    macro1{
                W wft1;
                V {ALL = 00LX;}
    }

    macro2{
                W wft1;
//                Ann {* data "test" *}
                Shift {V {ALL = 00LX;}}
    }
}

UserKeywords adc psu;

UserKeywords adc;
adc {
   bits 16;
   shift_reg 24;
   reg 41;
   SerializerInputPipelineStages 1;
   load "reg" {
      chain "load";
      length 24;
   }
}

Pattern PATT_START{

    start_label:
                W wft1;
                V {ALL = 00LX;}

                WaveformTable wft2;
                Vector {ALL = 11HX;}

                Loop 123 {
                    W wft1;
                    Vector {ALL = 00XX;}
                }
                

                MatchLoop 321 {
                    W wft1;
                    Vector {ALL = 00XX;}
                }

                MatchLoop Infinite {
                    W wft1;
                    Vector {ALL = 00XX;}
                }
                
                Call proc1;

                Call proc2{ DATA1 = 010011001LLHLLL;}

                Macro macro1;

                Macro macro2{ DATA1 = 010011001LLHLLL;}
                
                Goto start_label;

                Stop;

}
