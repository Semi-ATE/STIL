%import base.SIGNAL_NAME_TERMINAL
%import base.WFC_LIST
%import base.WFC
%import base.INT
%import base.USER_DEFINED_NAME
%import base.scan_type
%import base.annotation

//signal_groups_block :  "SignalGroups"       [SIGNAL_GROUPS_DOMAIN_NAME] "{"                      (signal_groups_list | annotation)+ "}"
  signal_groups_block :  KEYWORD_SIGNALGROUPS [SIGNAL_GROUPS_DOMAIN_NAME] open_signal_groups_block (signal_groups_list | annotation)+ close_signal_groups_block

KEYWORD_SIGNALGROUPS : "SignalGroups"

SIGNAL_GROUPS_DOMAIN_NAME : USER_DEFINED_NAME 

open_signal_groups_block : "{" 

    // scan_type is common rule which can be find in the common.grammar file
    signal_groups_list : SIGNAL_GROUP_NAME "=" "'" SIGREF_NAME (sigref_expr)* "'" (scan_type | SIGNAL_LIST_END_STMT | signal_attributes) 
    
    SIGNAL_GROUP_NAME : USER_DEFINED_NAME 
    
    sigref_expr :  (SIG_ADD | SIG_SUB) SIGREF_NAME
    
    SIG_ADD : "+"
    SIG_SUB : "-"
    
    SIGREF_NAME : SIGNAL_NAME_TERMINAL 

    SIGNAL_LIST_END_STMT : ";"

close_signal_groups_block : "}"

//  signal_attributes : "{"                    (termination | default_state | base | alignment | scan_in | scan_out | data_bit_count)* "}"
    signal_attributes : open_signal_attr_block (termination | default_state | base | alignment | scan_in | scan_out | data_bit_count | wfcmap)* close_signal_attr_block

    open_signal_attr_block : "{"

//      termination     : "Termination"       ("TerminateHigh" | "TerminateLow" | "TerminateOff" | "TerminateUnknown") ";" 
        termination     : KEYWORD_TERMINATION ("TerminateHigh" | "TerminateLow" | "TerminateOff" | "TerminateUnknown") ";" 
        KEYWORD_TERMINATION : "Termination"
    
//      default_state   : "DefaultState"        ("U" | "D" | "Z" | "ForceUp" | "ForceDown" | "ForceOff") ";" 
        default_state   : KEYWORD_DEFAULT_STATE (SIG_DEF_STATE_UP | SIG_DEF_STATE_DOWN | SIG_DEF_STATE_OFF) ";" 
        KEYWORD_DEFAULT_STATE : "DefaultState"
        SIG_DEF_STATE_UP   : "U" | "ForceUp"
        SIG_DEF_STATE_DOWN : "D" | "ForceDown"
        SIG_DEF_STATE_OFF  : "Z" | "ForceOff"
    
//      base            : "Base"       ("Hex" | "Dec") WFC_LIST ";" 
        base            : KEYWORD_BASE ("Hex" | "Dec") WFC_LIST ";" 
        KEYWORD_BASE : "Base"
    
//      alignment       : "Alignment"       ("MSB" | "LSB") ";" 
        alignment       : KEYWORD_ALIGNMENT ("MSB" | "LSB") ";" 
        KEYWORD_ALIGNMENT : "Alignment"
    
//      scan_in         : "ScanIn"       [INT] ";" 
        scan_in         : KEYWORD_SCANIN [INT] ";" 
        KEYWORD_SCANIN : "ScanIn"
    
//      scan_out        : "ScanOut"       [INT] ";" 
        scan_out        : KEYWORD_SCANOUT [INT] ";" 
        KEYWORD_SCANOUT : "ScanOut"
    
//      data_bit_count  : "DataBitCount"       INT ";" 
        data_bit_count  : KEYWORD_DATABITCOUNT INT ";" 
        KEYWORD_DATABITCOUNT : "DataBitCount"

//      wfcmap from IEEE 1450.1 Design
        wfcmap  : KEYWORD_WFCMAP open_wfcmap_block (one2many | two2one)* close_wfcmap_block
        KEYWORD_WFCMAP: "WFCMap"
    
        one2many : WFC "->" WFC_LIST ";"
        two2one : WFC (WFC) "->" WFC ";"

        open_wfcmap_block : "{"
        close_wfcmap_block : "}"

    close_signal_attr_block : "}"
