STIL 1.0;

Signals {
    si In;
    sio1 InOut {ScanIn;}
    sio2 InOut {ScanOut;}
}


SignalGroups { 
	bidi = 'sio1 + sio2';
    all = 'si + bidi';
}


Timing { 
  WaveformTable wft 
  { Period '100ns';
      Waveforms 
      {
        si {0 {'0ns' D; }}
        si {1 {'0ns' U; }}
        si {P {'10ns' D; '25ns' U; '50ns' D;}}
        
        bidi {Z {'0ns' Z;}}
        bidi {01 {'10ns' D/U;}}
        bidi {P {'10ns' D; '25ns' U; '50ns' D;}}
        bidi {LHX {'10ns' L/H/X;}}
      }
  }
}

PatternBurst patt_burst{
 PatList {pattern;}
}

PatternExec patt_exec {
    PatternBurst patt_burst;
}

Procedures {
   "load_unload" {
      W wft;
      C { all=0ZL; }
      "pre_shift": V { si=1; }
      Shift {
         W wft;
         V { si=P; sio1=#; sio2=#; }
      }
   }
}
Pattern pattern{
        W wft;
        Vector { all  = 0ZX;}

	   "pattern 0": Call "load_unload" { 
		  sio1=000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000; }
	   "pattern 1": Call "load_unload" { 
		  sio1=001100110011001100110011001100110011001100110011001100110011001100110011001100110011001100110011001100110011001100110011001100110011001100110011001100110011001100110011001100110011001100110011001100110011001100110011001100110011001100110011001011111111111111100101;
		  sio2=LHHLLLHHHHHHHLLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHLHHLHLHLLHHHLLHHLHHLLHLLLL; }
	   "pattern X": Call "load_unload" { 
		  sio2=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX; }

        Vector { all  = 0ZX;}

}
// PASS
